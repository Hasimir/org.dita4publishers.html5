<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_fr3_5pb_5h">
 <title>The d4p.ajaxLoader object type</title>
 <shortdesc>The d4p.ajaxLoader is an object type that manage AJAX calls.</shortdesc>
 <conbody>
  <p>In this application, ajax calls may be needed in different contexts:<ul id="ul_sq3_zpb_5h">
    <li>to load the main content,</li>
    <li>to load others content such as dialog for example if UI dialog are in used.</li>
   </ul>
  </p>
  <p>Different contexts means different output selectors, ajax calls that might occurs concurrently and different post
   processing of the ajax request. For example, once the main content is loaded, the content must be parsed and every
   attributes @href and @src must be rewritted because all links in the pages are relative from the page and not the
   index.html. In a dialog, you might choose to remove links from the content to make the dialog less confusing (It may
   looks weird for certain users to jump from a dialog to another page because navigation path is confusing.</p>
  <p>The d4p.ajax object the main instance of the d4p.ajaxLoader object type.</p>
  <section>
   <title>How to create an instance of the d4p.ajaxLoader object</title>
   <p>Simply use the new keyword, the optional parameter</p>
   <codeblock>
var ajax = new d4p.ajaxLoader();
    </codeblock>
  </section>
  <section>
   <title>How to assign different parser to the new instanciated object</title>
   <p>Parser are defined as a prototype of the d4p.ajaxLoader, please see the availaible prototypes below. The ready
    function allows you to assign post processing functions to the content.</p>
   <codeblock>
var ajax = new d4p.ajaxLoader();
ajax.ready('rewriteAttrHref');
ajax.ready('rewriteAttrSrc')
    </codeblock>
   <p>The preceding code tells to the ajax object to apply rewriteAttrHref and rewriteAttrHref once the content is
    loaded.</p>
  </section>
  <section>
   <title>How to change the output selector of the new instanciated object</title>
   <p id="changeOutputSelector">The function setOutputSelector( selector ) allows to change the output selector</p>
   <codeblock id="changeOutputSelectorCode">
ajax.setOutputSelector("#idOfTheElement");
    </codeblock>
  </section>
 </conbody>
</concept>
