<?xml version="1.0" encoding="UTF-8"?>
<project name="html5compressor" default="package.compress" basedir="." xmlns:dita="http://dita-ot.sourceforge.net">
	
	<dirname property="ant.file.html5compressor.dir" file="${ant.file.html5compressor}"/>	
	<dirname property="dita.plugins.dir" file="${ant.file.html5compressor.dir}"/>
		
	<condition property="dita.dir" value="${dita.plugins.dir}/../">
		<not>
			<isset property="dita.dir"/>
		</not>
	</condition>
	
	<condition property="tempdir" value="${dita.dir}/temp/">
		<not>
			<isset property="tempdir"/>
		</not>
	</condition>
	
	<mkdir dir="${tempdir}" />
	
	<loadproperties srcFile="${ant.file.html5compressor.dir}/shared.properties"/>
	
	<target name="package.compress" depends="compressor.check, compressor.install, init.build.theme, prepare.html5.theme.dir, load.properties, package.concat.js, package.concat.css, package.compress.css, package.compress.js, package.copy.assets, clean.temp.libs" />
	
	<target name="compressor.check" description="check compressor availability">
		<available file="${ant.file.html5compressor.dir}/${compressor.path}" property="html5.compressor.available"/>
	</target>
	
	<target name="compressor.install" unless="html5.compressor.available" description="Install compressor if not available">
		<get src="${compressor.repo}" dest="${ant.file.html5compressor.dir}/"/>
		<unzip src="${ant.file.html5compressor.dir}/yuicompressor-2.4.7.zip" dest="${ant.file.html5compressor.dir}/"/>
		<delete file="${ant.file.html5compressor.dir}/yuicompressor-2.4.7.zip"/>
	</target>
	
	<target name="prepare.html5.theme.dir" description="Copy main libs directory and grab all theme directory inside plugins to create one">
		<!-- this is the current theme builded -->
		<condition property="html5.site.theme" value="d4p-classic">
			<not>
				<isset property="html5.site.theme"/>
			</not>
		</condition>
		
		<property name="html5.compressor.build.dir" location="${ant.file.html5compressor.dir}/${html5.themes.dir}/${html5.site.theme}" />
		<property name="html5.compression.temp.dir" location="${tempdir}/${html5.compression.temp.dir.name}"/>
		
		<delete dir="${html5.compression.temp.dir}"/>		
		
		<mkdir dir="${html5.compression.temp.dir}" />	
		<mkdir dir="${html5.compression.temp.dir}/${html5.themes.dir}/"/>
		
		<!-- copy main library -->
		<copy todir="${html5.compression.temp.dir}" >	
			<fileset dir="${ant.file.html5compressor.dir}/${html5.libs.dir}"/>
		</copy>
		
		<!-- copy all themes dir -->
		<copy todir="${html5.compression.temp.dir}/${html5.themes.dir}/">			
			
			<fileset dir="${ant.file.html5compressor.dir}/${html5.libs.dir}/${html5.themes.dir}">
				<include name="**"/>
			</fileset>
		</copy>
		
		<copy todir="${html5.compression.temp.dir}/${html5.themes.dir}/">	
			<fileset dir="${dita.plugins.dir}">
				<include name="*/theme/${html5.site.theme}/**"/>
			</fileset>
			<regexpmapper from=".*/theme/(.*)" to="\1" />				
		</copy>
		
	</target>
	
	<target name="clean.temp.libs">
		
	</target>
	
	<target name="check.html5.config.exists">
		<property name="html5.site.config" location="${html5.compression.temp.dir}/${html5.themes.dir}/${html5.site.theme}/config.xml"/>
		<available file="${html5.site.config}" property="html5.config.exists"/>
	</target>
	
	<target name="load.properties" depends="check.html5.config.exists" description="load theme properties if not already loaded" unless="html5.style" if="html5.config.exists">
		<echo>Loading property file: ${html5.site.config} </echo>
		<xmlproperty file="${html5.site.config}" collapseAttributes="true" semanticAttributes="true" />
		<echoproperties>
			<propertyset>
				<propertyref prefix="html5."/>
			</propertyset>
		</echoproperties>
	</target>
	
	<target name="init.build.theme" depends="prepare.html5.theme.dir">
		<echo>Buidling assets</echo>
		
		<delete dir="${html5.compressor.build.dir}"/>
		<mkdir dir="${html5.compressor.build.dir}"/>
	</target>	
	
	<target name="package.compress.js" if="html5.script">
		<apply executable="java" parallel="false" dest="${html5.compressor.build.dir}/${html5.js.dir}">
			<fileset dir="${html5.compressor.build.dir}/${html5.js.dir}" includes="*"/>
			<arg line="-jar"/>
			<arg path="${ant.file.html5compressor.dir}/${compressor.path}"/>
			<srcfile/>
			<arg line="-o"/>
			<mapper type="glob" from="*.js" to="*-min.js"/>
			<targetfile/>
		</apply>
		<echo>javascript package compressed</echo>
	</target>
	
	<target name="package.compress.css" if="html5.style">
		<apply executable="java" parallel="false" dest="${html5.compressor.build.dir}">
			<fileset dir="${html5.compressor.build.dir}">
				<include name="**/**"/>
			</fileset>
			<arg line="-jar"/>
			<arg path="${ant.file.html5compressor.dir}/${compressor.path}"/>
			<srcfile/>
			<arg line="-o"/>
			<mapper type="glob" from="*.css" to="*-min.css"/>
			<targetfile/>
		</apply>
		<echo>css packaged compressed</echo>
	</target>
	
	<target name="package.concat.js" if="html5.script">
		<mkdir dir="${html5.compressor.build.dir}/${html5.js.dir}"/>
		<concat destfile="${html5.compressor.build.dir}/${html5.js.dir}/script.js">
			<filelist dir="${html5.compression.temp.dir}" files = "${html5.script}" />
			<fileset dir="${html5.compression.temp.dir}"  >
				<include name="${html5.themes.dir}/${html5.site.theme}/${html5.js.dir}/${html5.default.script}"/>
			</fileset>
		</concat>
	</target>
	
	<target name="package.concat.css" if="html5.style">
		<mkdir dir="${html5.compressor.build.dir}/${html5.css.dir}"/>
		<concat destfile="${html5.compressor.build.dir}/${html5.css.dir}/style.css">
			<filelist dir="${html5.compression.temp.dir}" files = "${html5.style}" />
			<fileset dir="${html5.compression.temp.dir}" >
				<include name="${html5.themes.dir}/${html5.site.theme}/${html5.css.dir}/${html5.default.style}"/>
			</fileset>
		</concat>
	</target>
	
	<target name="package.copy.assets" description="List and copy all assets to copy (images, fonts) into the compressed theme directory" unless="package.copy.assets.done">
			
		<mkdir dir="${html5.compressor.build.dir}/${html5.img.dir}"/>
		<mkdir dir="${html5.compressor.build.dir}/${html5.fonts.dir}"/>
		
		<filelist id="html5.style.css.path" dir="." files="${html5.style}"/> 		
		
		<!-- 
			pathconvert should calculate path using the basedir directory
			the regex replace the basedir path by the html5.compression.temp.dir path
		-->
		
		<pathconvert property="img.path.converted" pathsep="," refid="html5.style.css.path">
			<mapper type="regexp" from="^${basedir}/(.*)/(.*)/css/.*.css"  to="\1/\2/img/"/>
		</pathconvert> 
		
		<pathconvert property="font.path.converted" pathsep="," refid="html5.style.css.path">
			<mapper type="regexp" from="^${basedir}/(.*)/(.*)/css/.*.css"  to="\1/\2/fonts/"/>
		</pathconvert>
		
		<fileset id="html5.imgs.path" dir="${html5.compression.temp.dir}">
			<patternset includes="${img.path.converted}">
				<exclude name="*.css" />
				<exclude name="*.js" />	
				<exclude name="*.psd" />	
			</patternset>
		</fileset>
		
		<fileset id="html5.fonts.path" dir="${html5.compression.temp.dir}">
			<type type="file"/>
			<patternset includes="${font.path.converted}">		
				<exclude name="*.css" />
				<exclude name="*.js" />	
				<include name="*.otf" />
				<include name="*.woff" />
				<include name="*.ttf" />		
			</patternset>
		</fileset>      
		
		<copy todir="${html5.compressor.build.dir}/${html5.img.dir}" failonerror="false" force="true" flatten="true">
			<fileset refid="html5.imgs.path" />
		</copy>
		
		<copy todir="${html5.compressor.build.dir}/${html5.fonts.dir}" failonerror="false" force="true" flatten="true">
			<fileset refid="html5.fonts.path" />
		</copy>
		
		<property name="html5.package.assets.copied" value="true" />
		
	</target>
	
	
</project>
